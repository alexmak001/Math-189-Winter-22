p0=1
library(MASS)
# Load dataset
data(Boston)
# Check the variables in dataset
names(Boston)
View(Boston)
?Boston
# A peek of the dataset
head(Boston)
plot(x = Boston$lstat, y = Boston$medv,
xlab = "x (lstat)", ylab = "y (medv)",
main = "Scatter plot of x and y",
col="red", pch=20, cex.lab=2, cex.main=2)
###### Simple Linear Regression Fit ######
slm.fit =lm(medv~lstat ,data=Boston)
summary(slm.fit)
plot(x = Boston$lstat, y = Boston$medv,
xlab = "x (lstat)", ylab = "y (medv)",
main = "Simple Linear Regression Fit",
col="red", pch=20, cex.lab=2, cex.main=2)
abline(slm.fit, col="blue", lwd=2)
###### Calculate RSS and draw contour plot for RSS ######
g=50
x=Boston$lstat
y=Boston$medv
n=length(y)
b=sum((x-mean(x))*(y-mean(y)))/sum((x-mean(x))^2)
a=mean(y)-b*mean(x)
RSS.min=sum((y-as.vector(cbind(1,x)%*%c(a,b)))^2)/(n-2)
a.grid=seq(a-20,a+20,length=g)
b.grid=seq(b-3,b+3,length=g)
grid=as.matrix(expand.grid(a.grid,b.grid))
RSS=rep(0,g^2)
for (i in 1:(g^2)){
yhat=as.vector(cbind(1,x)%*%grid[i,])
RSS[i]=sum((y-yhat)^2)/(n-2)
}
RSE=sqrt(RSS)
RSS=matrix(RSS,g,g)
RSE=matrix(RSE,g,g)
m=which.min(RSE)
# Plot the contour plots of Residual Standard Error
par(mfrow=c(1,1),mar=c(5,5,2,2))
contour(a.grid-b*mean(Boston$lstat),b.grid,RSE,xlab=expression(beta[0]),ylab=expression(beta[1]),levels=seq(min(RSE), max(RSE), length.out=10),axes=T,frame.plot=T,col=4,drawlabels=T,cex.lab=1.5,labcex=1.3)
points(a-b*mean(Boston$lstat),b,col=2,pch=19,cex=1.5)
mlm.fit =lm(medv~lstat+rm+age ,data=Boston )
summary(mlm.fit)
RSS0=19473
View(mlm.fit)
View(Boston)
View(mlm.fit)
mlm.fit
?lm
View(mlm.fit)
knitr::opts_chunk$set(echo = TRUE)
baseball = read.csv("baseball_5.csv")
head(baseball)
View(baseball)
View(baseball)
View(mlm.fit)
multi_fit = lm(Salary~Hits+Walks+PutOuts+CHits, data=baseball)
multi_fit$coefficients
summary(mlm.fit)
multi_fit = lm(Salary~Hits+Walks+PutOuts+CHits, data=baseball)
summary(multi_fit)
summary(mlm.fit)
deviance(multi_fit)
deviance(mlm.fit)
F=(RSS0-RSS1)*(n-p-1)/RSS1*(p-p0)
RSS1=15418
p0=1
p=3
n=506
F=(RSS0-RSS1)*(n-p-1)/RSS1*(p-p0)
pf(F, p-p0, n-p-1, lower.tail=F)
F
View(RSS)
summary(multi_fit)$MultipleR_squared
R_squared = 0.4519
R_squared = 0.4519
R_squared = 0.4519
R_squared
deviance(lm(baseball$Salary~baseball$Hits))
RSS0 = 43058621
RSS1 = 29223384
p0 = 1
p = 4
n = 263
F = (RSS0-RSS1)*(n-p-1)/(RSS1*(p-p0))
F
F=(RSS0-RSS1)*(n-p-1)/RSS1*(p-p0)
pf(F, p-p0, n-p-1, lower.tail=F)
RSS0 = 43058621
RSS1 = 29223384
p0 = 1
p = 4
n = 263
F = (RSS0-RSS1)*(n-p-1)/(RSS1*(p-p0))
pf(F, p-p0, n-p-1, lower.tail=F)
RSS0 = 43058621
RSS1 = 29223384
p0 = 1
p = 4
n = 263
F = (RSS0-RSS1)*(n-p-1)/(RSS1*(p-p0))
pf(F, p-p0, n-p-1)
RSS0 = 43058621
RSS1 = 29223384
p0 = 1
p = 4
n = 263
F = (RSS0-RSS1)*(n-p-1)/(RSS1*(p-p0))
pf(F, p-p0, n-p-1.lower.taill=T)
RSS0 = 43058621
RSS1 = 29223384
p0 = 1
p = 4
n = 263
F = (RSS0-RSS1)*(n-p-1)/(RSS1*(p-p0))
pf(F, p-p0, n-p-1.lower.tail=T)
RSS0 = 43058621
RSS1 = 29223384
p0 = 1
p = 4
n = 263
F = (RSS0-RSS1)*(n-p-1)/(RSS1*(p-p0))
pf(F, p-p0, n-p-1, lower.tail=T)
RSS0 = 43058621
RSS1 = 29223384
p0 = 1
p = 4
n = 263
F = (RSS0-RSS1)*(n-p-1)/(RSS1*(p-p0))
F
pf(F, n-p-1, p-p0, lower.tail=F)
pf(F, p-p0, n-p-1, lower.tail=F)
summary(multi_fit)
multi_fit = lm(Salary~Hits+Walks+PutOuts+CHits, data=baseball)
summary(multi_fit)$coefficients
summary(multi_fit)$r_squared
summary(multi_fit)$r.squared
summary(multi_fit)$r.squared
summary(multi_fit)
summary(multi_fit)$r.squared
summary(multi_fit)$p.value
summary(multi_fit)$p.vaue
summary(multi_fit)
summary(lm(baseball$Salary~baseball$Hits))
summary(lm(Salary~Hits, data=baseball))
deviance(lm(baseball$Salary~baseball$Hits))
deviance(lm(Salary~Hits, data=baseball))
summary(multi_fit)$coefficients[,4]
p_values <- summary(multi_fit)$coefficients[,4]
data.frame(p_values)
p_values <- summary(multi_fit)$coefficients[,4]
data.frame(p_values)
p <- c()
for (i in 1:nrow(p_values)) {
if (p_values[i, 1] < 0.0001) {
p <- append(p, "reject")
} else {
p <- append(p, "fail to reject")
}
}
p_values <- summary(multi_fit)$coefficients[,4]
df <- data.frame(p_values)
p <- c()
for (i in 1:nrow(df)) {
if (df[i, ] < 0.0001) {
p <- append(p, "reject")
} else {
p <- append(p, "fail to reject")
}
}
df$result <- p
p_values <- summary(multi_fit)$coefficients[,4]
df <- data.frame(p_values)
p <- c()
for (i in 1:nrow(df)) {
if (df[i, ] < 0.0001) {
p <- append(p, "reject")
} else {
p <- append(p, "fail to reject")
}
}
df$result <- p
df
p_values <- summary(multi_fit)$coefficients[,4]
df <- data.frame(p_values)
p <- c()
for (i in 1:nrow(df)) {
if (df[i, ] < 0.05) {
p <- append(p, "reject")
} else {
p <- append(p, "fail to reject")
}
}
df$result <- p
df
p_values <- summary(multi_fit)$coefficients[,4]
df <- data.frame(p_values)
p <- c()
for (i in 1:nrow(df)) {
if (df[i, ] < 0.05) {
p <- append(p, "reject")
} else {
p <- append(p, "fail to reject")
}
}
df$result <- p
df
