knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
library(MASS)
train_Standardized
train = read.table("spam-train.txt",header=FALSE, sep=",")
head(train)
test = read.table("spam-test.txt",header=FALSE, sep=",")
head(test)
train_Standardized = data.frame(scale(train))
train_Standardized$V58 = train$V58
train_Standardized
View(train_Standardized)
View(train)
stan_model <- lda(V58~., data=train_Standardized)
stan_predictions <- model %>% predict(test_Standardized)
stan_model <- lda(V58~., data=train_Standardized)
stan_predictions <- predict(model, test_Standardized)
stan_model <- lda(V58~., data=train_Standardized)
stan_predictions <- predict(stan_model, test_Standardized)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
library(MASS)
train = read.table("spam-train.txt",header=FALSE, sep=",")
head(train)
test = read.table("spam-test.txt",header=FALSE, sep=",")
head(test)
train_Standardized = data.frame(scale(train))
train_Standardized$V58 = train$V58
train_Standardized
test_Standardized = data.frame(scale(test))
test_Standardized$V58 = test$V58
head(test_Standardized)
spamStandTrain = train_Standardized[train_Standardized$V58 == 1,]
hist(spamStandTrain$V53,main="Number of times the Charater $ Appears", xlab="$ Character  Appearance")
NotspamStandTrain = train_Standardized[train_Standardized$V58 == 0,]
hist(NotspamStandTrain$V53,main="Number of times the Charater $ Appears", xlab="$ Character  Appearance")
train_Log = data.frame(log(train+1))
train_Log$V58 = train$V58
head(train_Log)
test_Log = data.frame(log(test+1))
test_Log$V58 = test$V58
head(test_Log)
plot(train_Log$V56, train_Log$V57, col=factor(train_Log$V58),xlab="Log of length of the longest uninterrupted
sequence of capital letters", ylab="Log of sum of the lengths of uninterrupted
sequences of capital letters",main="Log of Longest Capital Letters vs. Sum of number of capital letters")
legend("bottomright",
legend = levels(factor(train_Log$V58)),
pch = 19,
col = factor(levels(factor(train_Log$V58))))
train_Discretize = data.frame(train>0)
train_Discretize$V58 = train$V58
train_Discretize = train_Discretize*1
head(train_Discretize)
test_Discretize = data.frame(test>0)
test_Discretize$V58 = test$V58
test_Discretize = test_Discretize*1
head(test_Discretize)
discLabels = c("make", "address", "all", "3d", "our")
means = c(mean(train_Discretize$V1),mean(train_Discretize$V2),mean(train_Discretize$V3),mean(train_Discretize$V4),mean(train_Discretize$V5))
barplot(means, main="Ratio of a word being present in all of the training emails",names.arg = discLabels,
xlab="Word")
stan_model <- lda(V58~., data=train_Standardized)
stan_predictions <- predict(stan_model, test_Standardized)
stan_model <- lda(V58~., data=train_Standardized)
stan_predictions <- predict(stan_model, test_Standardized)
stan_class = stan_predictions$class
true_val = test_Standardized$V58
stan_test_error = mean(stan_class!=true_val)
stan_test_error
View(train_Discretize)
View(stan_model)
View(stan_model)
stan_model <- lda(V58~., data=train_Standardized)
stan_predictions <- predict(stan_model, test_Standardized)
stan_class = stan_predictions$class
stan_true_val = test_Standardized$V58
stan_test_error = mean(stan_class!=stan_true_val)
stan_test_error
log_model <- lda(V58~., data=train_Log)
log_predictions <- predict(log_model, test_Log)
log_class = log_predictions$class
log_true_val = test_Log$V58
log_test_error = mean(log_class!=log_true_val)
log_test_error
stan_qda <- qda(V58~., data=train_Standardized)
stan_qdaPred <- predict(stan_qda, test_Standardized)
stan_qdaClass = stan_qdaPred$class
stan_qdaTrue = test_Standardized$V58
stan_qdaTest = mean(stan_qdaClass != stan_qdaTrue)
stan_qdaTest
log_qda = qda(V58~., data=train_Log)
log_qdaPred = predict(log_qda, test_Log)
log_qdaTest = mean(log_qdaPred$class != test_Log$V58)
log_qdaTest
tab <- matrix(c(stan_test_error, stan_qdaTest,
log_test_error, log_qdaTest), nrow=4, ncol=1)
colnames(tab) <- c('Test Error Rate')
rownames(tab) <- c('LDA on Standardized Data',
'QDA on Standardized Data',
'LDA on Log Transformed Data',
'QDA on Log Transformed Data')
tab <- as.table(tab)
tab
tab <- matrix(c(stan_test_error, stan_qdaTest,
log_test_error, log_qdaTest), nrow=4, ncol=1)
colnames(tab) <- c('Test Error Rate')
rownames(tab) <- c('LDA on Standardized Data',
'QDA on Standardized Data',
'LDA on Log Transformed Data',
'QDA on Log Transformed Data')
tab <- as.table(tab)
tab
